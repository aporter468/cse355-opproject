#BlueJ class context
comment0.params=index\ alphabet\ isStart\ isAccept
comment0.target=State(int,\ java.util.ArrayList,\ boolean,\ boolean)
comment1.params=a
comment1.target=java.util.ArrayList\ getTransitionsOn(java.lang.String)
comment1.text=\n\ Generates\ an\ ArrayList\ of\ states\ reached\ on\ input\ string\ a\n
comment10.params=isAccept
comment10.target=void\ setAccept(boolean)
comment11.params=
comment11.target=boolean\ getStart()
comment12.params=
comment12.target=boolean\ getAccept()
comment13.params=indexIn
comment13.target=void\ setIndex(int)
comment14.params=
comment14.target=int\ getIndex()
comment15.params=list
comment15.target=java.util.ArrayList\ sortStatesList(java.util.ArrayList)
comment2.params=a
comment2.target=java.util.ArrayList\ getIndicesTransitionsOn(java.lang.String)
comment2.text=\n\ same\ process\ as\ getTransitionsOn\ but\ generates\ list\ of\ integer\ indices.\n
comment3.params=a
comment3.target=State\ getFirstTransitionOn(java.lang.String)
comment3.text=\n\ Returns\ first\ state\ reached\ on\ input\ string\ a\n
comment4.params=a\ toState
comment4.target=void\ addTransition(java.lang.String,\ State)
comment4.text=\n\ construct\ transition\ by\ adding\ state\ to\ list\ if\ not\ already\ existing\n
comment5.params=otherStatesList
comment5.target=boolean\ matchesStatesCombined(java.util.ArrayList)
comment5.text=\n\ checks\ if\ the\ states\ combined\ (from\ FA\ before\ conversion)\ is\ a\ match\ to\ prevent\ duplication\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment7.params=psc
comment7.target=void\ setPrevStatesCombined(java.util.ArrayList)
comment8.params=
comment8.target=java.util.ArrayList\ getPrevStatesCombined()
comment9.params=isStart
comment9.target=void\ setStart(boolean)
numComments=16
