#BlueJ class context
comment0.params=frame
comment0.target=ModelPanel(GUIFrame)
comment1.params=width\ height
comment1.target=void\ setSize(int,\ int)
comment2.params=
comment2.target=void\ resizeNetwork()
comment3.params=
comment3.target=void\ update()
comment4.params=
comment4.target=void\ render()
comment4.text=\ public\ void\ run()\n\ \n\ \ \ \ {\n\n\ \ \ \ \ \ \ \ long\ afterTime,\ timeDiff,\ sleepTime;\n\ \ \ \ \ \ \ \ long\ overSleepTime\ \=\ 0L;\n\ \ \ \ \ \ \ \ int\ noDelays\ \=\ 0;\n\ \ \ \ \ \ \ \ long\ excess\ \=\ 0L;\n\n\ \ \ \ \ \ \ \ beforeTime\ \=\ System.nanoTime();\n\n\ \ \ \ \ \ \ \ movementFramesCount\ \=\ 0;\n\n\ \ \ \ \ \ \ \ while\ (true)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ System.out.println("in\ while\:"+getWidth()+"\ "+getHeight());\n\ \ \ \ \ \ \ \ \ \ \ \ //if\ (optimizationIndex\=\=0\ ||\ optimizationIndex\=\=1)\n\ \ \ \ \ \ \ \ \ \ \ \ //\ \ \ \ \ net.getNodeSteps();\n\n\ \ \ \ \ \ \ \ \ \ \ \ update();\n\ \ \ \ \ \ \ \ \ \ \ \ render();\n\ \ \ \ \ \ \ \ \ \ \ \ paintPanel();\n\n\ \ \ \ \ \ \ \ \ \ \ \ afterTime\ \=\ System.nanoTime();\n\ \ \ \ \ \ \ \ \ \ \ \ timeDiff\ \=\ afterTime\ -\ beforeTime;\n\ \ \ \ \ \ \ \ \ \ \ \ sleepTime\ \=\ (period\ -\ timeDiff)\ -\ overSleepTime;\ \ //\ time\ left\ in\ this\ loop\n\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (sleepTime\ >\ 0)\ {\ \ \ \ //\ some\ time\ left\ in\ this\ cycle\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ try\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Thread.sleep(sleepTime/1000000L);\ \ \ //\ nano\ ->\ ms\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ catch\ (InterruptedException\ ex)\ {\ }\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ overSleepTime\ \=\ (System.nanoTime()\ -\ afterTime)\ -\ sleepTime;\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\ \ \ \ //\ sleepTime\ <\=\ 0;\ frame\ took\ longer\ than\ the\ period\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ excess\ -\=\ sleepTime;\ \ \ \ //\ store\ excess\ time\ value\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ overSleepTime\ \=\ 0L;\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (++noDelays\ >\=\ NO_DELAYS_PER_YIELD)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Thread.yield();\ \ \ \ \ //\ give\ another\ thread\ a\ chance\ to\ run\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ noDelays\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ \ \ \ \ beforeTime\ \=\ System.nanoTime();\n\n\ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ int\ skips\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ while\ (excess\ >\ period\ &&\ skips\ <\ MAX_FRAME_SKIPS)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ excess\ -\=\ period;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ update();\ \ \ //\ update\ state\ but\ don't\ render\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ skips++;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n
comment5.params=
comment5.target=void\ paintPanel()
numComments=6
